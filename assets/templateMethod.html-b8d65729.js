const e=JSON.parse('{"key":"v-36c41d26","path":"/docs/01-csbase/design-pattern/templateMethod.html","title":"模板方法模式","lang":"zh-CN","frontmatter":{"author":"zeanzai","title":"模板方法模式","category":["设计模式"],"description":"业务场景 假如一个业务流程需要几个通用的步骤，只有部分细节不一样外，其他的都一样，这种场景都适合使用模板方法模式。例如，喝红茶，喝绿茶、喝白茶等喝茶过程可以分为： 准备茶杯、挑选茶叶、煮茶。 垃圾实现 垃圾的实现就是直接针对每一个场景都实现一套代码。 模板方法实现 垃圾实现中会有很多重复的代码，比如都需要准备茶杯、都需要进行煮茶。 1. 构造一个抽象类...","head":[["meta",{"property":"og:url","content":"https://zeanzai.github.io/java-tips/java-tips/docs/01-csbase/design-pattern/templateMethod.html"}],["meta",{"property":"og:site_name","content":"java-tips"}],["meta",{"property":"og:title","content":"模板方法模式"}],["meta",{"property":"og:description","content":"业务场景 假如一个业务流程需要几个通用的步骤，只有部分细节不一样外，其他的都一样，这种场景都适合使用模板方法模式。例如，喝红茶，喝绿茶、喝白茶等喝茶过程可以分为： 准备茶杯、挑选茶叶、煮茶。 垃圾实现 垃圾的实现就是直接针对每一个场景都实现一套代码。 模板方法实现 垃圾实现中会有很多重复的代码，比如都需要准备茶杯、都需要进行煮茶。 1. 构造一个抽象类..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-02T07:41:00.000Z"}],["meta",{"property":"article:author","content":"zeanzai"}],["meta",{"property":"article:modified_time","content":"2024-09-02T07:41:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模板方法模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-02T07:41:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"zeanzai\\"}]}"]]},"headers":[{"level":2,"title":"业务场景","slug":"业务场景","link":"#业务场景","children":[]},{"level":2,"title":"垃圾实现","slug":"垃圾实现","link":"#垃圾实现","children":[]},{"level":2,"title":"模板方法实现","slug":"模板方法实现","link":"#模板方法实现","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[]},{"level":2,"title":"思路扩展","slug":"思路扩展","link":"#思路扩展","children":[]}],"git":{"createdTime":1725262860000,"updatedTime":1725262860000,"contributors":[{"name":"zeanzai","email":"zeanzai.me@gmail.com","commits":1}]},"readingTime":{"minutes":1.78,"words":534},"filePathRelative":"docs/01-csbase/design-pattern/templateMethod.md","localizedDate":"2024年9月2日","autoDesc":true,"excerpt":""}');export{e as data};
